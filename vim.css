/* 归纳

3种模式：指令模式-编辑模式-指令列模式 */


/* 指令模式:

    +：游标移动到非空字符的下一列
    -：游标移动到非空字符的上一列

    n<space>:n为数字，游标向后移动n个字符距离

    0-Home：移动到一行的最前面字符
    $-End：移动到一行的最后面字符

    G：大G，移动到文件的最后一行

    nG：移动到文件的第n行

    gg：移动到第一行，等价于=>1G

    n<Enter>:游标向下移动n行

    /word: 向下搜索某字符串

    ?word:向上搜索某字符串

    :n1,n2s/word1/word2/g:在第 n1 与n2 行之间搜索 word1 這個字串，並將該字串替换为 word2 ！
    
            舉例來說，在 100 到 200 列之間搜尋 vbird 並取代為 VBIRD 則：
            『:100,200s/vbird/VBIRD/g』。(常用)

    :1,$s/word1/word2/g 	從第一行到最后一列搜索 word1 字串，並將該字串取代為 word2 ！(常用)
    :1,$s/word1/word2/gc 	從第一列到最後一列尋找 word1 字串，並將該字串取代為 word2 ！且在取代前顯示提示字元給使用者確認 (confirm) 是否需要取代！(常用) 
    
    x-向后删除一个字符，-backspace

    nx-删除n个

    dd-删除游标行

    ndd-删除游标所在的向下n行

    d1G 刪除游標所在到第一行的所有資料

    dG 	刪除游標所在到最后一行的所有資料

    d$ 	刪除游標所在處，到該行的最後一個字元

    d0 	那個是數字的 0 ，刪除游標所在處，到該行的起首一個字元

    yy 	複製游標所在的那一行(常用)

    y1G 	複製游標所在列到第一行的所有資料

    yG 	複製游標所在列到最後一行的所有資料

    y0 	複製游標所在的那個字元到該列行首的所有資料

    y$ 	複製游標所在的那個字元到該列行尾的所有資料

    p, P 	p 為將已複製的資料在游標下一列貼上，

            P 則為貼在游標上一列！ 
            
            舉例來說，我目前游標在第 20 列，且已經複製了 10 列資料。則按下 p 後， 那 10 列資料會貼在原本的 20 列之後，亦即由 21 列開始貼。
            
            但如果是按下 P 呢？ 那麼原本的第 20 列會被推到變成 30 列。 (常用)

    u 	復原前一個動作。(常用)

    [Ctrl]+r 	重做上一個動作。(常用)
    
*/
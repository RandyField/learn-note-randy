/*  
    选择器
    select
    selectAll
    */


/* 数据绑定(赋值，dom未改变)
    datum()
    data() */


/* d3对象.data(数组) */


/* d3对象.datum(字符串) */


/* 插入元素
    之后d3对象.append() 
    之前d3对象.insert()
*/


/* 删除元素
d3对象..remove() */


/* HTML 5 提供两种强有力的“画布”：SVG 和 Canvas。 */


/* SVG，指可缩放矢量图形（Scalable Vector Graphics），是用于描述二维矢量图形的一种图形格式，
是由万维网联盟制定的开放标准。SVG 使用 XML 格式来定义图形，除了 IE8 之前的版本外，
绝大部分浏览器都支持 SVG，可将 SVG 文本直接嵌入 HTML 中显示。

SVG 有如下特点：

    SVG 绘制的是矢量图，因此对图像进行放大不会失真。
    基于 XML，可以为每个元素添加 JavaScript 事件处理器。
    每个图形均视为对象，更改对象的属性，图形也会改变。
    不适合游戏应用。 */


/* Canvas 是通过 JavaScript 来绘制 2D 图形，是 HTML 5 中新增的元素。

Canvas 有如下特点：

    绘制的是位图，图像放大后会失真。
    不支持事件处理器。
    能够以 .png 或 .jpg 格式保存图像
    适合游戏应用 */


/* D3 虽然没有明文规定一定要在 SVG 中绘图，但是 D3 提供了众多的 SVG 图形的生成器，
它们都是只支持 SVG 的。因此，建议使用 SVG 画布。 */

/* 比例尺   */

/* 线性比例尺 */
/* var dataset = [1.2, 2.3, 0.9, 1.5, 3.3];
将 dataset 中最小的值，映射成 0；将最大的值，映射成 300。
var min = d3.min(dataset); //获取最小值
var max = d3.max(dataset); //获取最大值

var linear = d3.scale.linear() //返回一个线性比例尺-返回值，且是一个函数 alter(linear) ,function
        .domain([min, max]) //定义域
        .range([0, 300]); //值域

linear(0.9);    //返回 0
linear(2.3);    //返回 175
linear(3.3);    //返回 300 */


/* 序数比例尺 */
/* 
定义域和值域不一定是连续的。
var index = [0, 1, 2, 3, 4];
var color = ["red", "blue", "green", "yellow", "black"];
0 对应颜色 red，1 对应 blue，依次类推。
，这些值都是离散的，线性比例尺不适合，需要用到序数比例尺。
var ordinal=d3.scale.ordinal()
                    .domain(index)
                    .range(color);

                    ordinal(0); //返回 red
                    ordinal(2); //返回 green
                    ordinal(4); //返回 black
 */

/* 坐标轴 */
/* 在 SVG 画布的预定义元素里，有六种基本图形：

    矩形 <rect>
    圆形 <circle>
    椭圆 <ellipse>
    线段 <line>
    折线 <polyline>
    多边形 <polygon>

另外，还有一种比较特殊，也是功能最强的元素：

    路径 <path>

画布中的所有图形，都是由以上七种元素组成。 */












